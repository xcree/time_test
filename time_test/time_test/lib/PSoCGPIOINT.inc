;  Generated by PSoC Designer 5.2.2551
;
;
;  PSoCGPIOINT.inc
;
;  Data: 29 October, 2001
;  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
;
;  This file is generated by the Device Editor on Application Generation.
;  It contains equates that are useful in writing code relating to GPIO
;  related interrupts.
;  
;  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
;  Edits to this file will not be preserved.
;
; hall_in address and mask equates
hall_in_Data_ADDR:	equ	4h
hall_in_DriveMode_0_ADDR:	equ	104h
hall_in_DriveMode_1_ADDR:	equ	105h
hall_in_DriveMode_2_ADDR:	equ	7h
hall_in_GlobalSelect_ADDR:	equ	6h
hall_in_IntCtrl_0_ADDR:	equ	106h
hall_in_IntCtrl_1_ADDR:	equ	107h
hall_in_IntEn_ADDR:	equ	5h
hall_in_MASK:	equ	40h
; AnalogColumn_InputMUX_1 address and mask equates
AnalogColumn_InputMUX_1_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_1_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_1_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_1_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_1_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_1_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_1_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_1_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_1_MASK:	equ	1h
; AnalogColumn_InputMUX_0 address and mask equates
AnalogColumn_InputMUX_0_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_0_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_0_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_0_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_0_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_0_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_0_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_0_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_0_MASK:	equ	2h
; AnalogColumn_InputMUX_3 address and mask equates
AnalogColumn_InputMUX_3_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_3_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_3_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_3_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_3_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_3_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_3_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_3_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_3_MASK:	equ	4h
; d2 address and mask equates
d2_Data_ADDR:	equ	4h
d2_DriveMode_0_ADDR:	equ	104h
d2_DriveMode_1_ADDR:	equ	105h
d2_DriveMode_2_ADDR:	equ	7h
d2_GlobalSelect_ADDR:	equ	6h
d2_IntCtrl_0_ADDR:	equ	106h
d2_IntCtrl_1_ADDR:	equ	107h
d2_IntEn_ADDR:	equ	5h
d2_MASK:	equ	4h
; d1 address and mask equates
d1_Data_ADDR:	equ	4h
d1_DriveMode_0_ADDR:	equ	104h
d1_DriveMode_1_ADDR:	equ	105h
d1_DriveMode_2_ADDR:	equ	7h
d1_GlobalSelect_ADDR:	equ	6h
d1_IntCtrl_0_ADDR:	equ	106h
d1_IntCtrl_1_ADDR:	equ	107h
d1_IntEn_ADDR:	equ	5h
d1_MASK:	equ	10h
; p2_0 address and mask equates
p2_0_Data_ADDR:	equ	8h
p2_0_DriveMode_0_ADDR:	equ	108h
p2_0_DriveMode_1_ADDR:	equ	109h
p2_0_DriveMode_2_ADDR:	equ	bh
p2_0_GlobalSelect_ADDR:	equ	ah
p2_0_IntCtrl_0_ADDR:	equ	10ah
p2_0_IntCtrl_1_ADDR:	equ	10bh
p2_0_IntEn_ADDR:	equ	9h
p2_0_MASK:	equ	1h
